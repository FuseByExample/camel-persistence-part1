<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2017 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:osgi="http://www.springframework.org/schema/osgi"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi-1.2.xsd">

    <!-- PostgreSQL DB - non-XA datasource -->
    <!-- dbcp2.BasicDataSource doesn't implement getConnection(user, password) method used during schema export -->
    <!--<bean id="reportdb" class="org.apache.commons.dbcp2.BasicDataSource">-->
        <!--<property name="driverClassName" value="org.postgresql.Driver" />-->
        <!--<property name="url" value="jdbc:postgresql://localhost:5432/reportdb" />-->
        <!--<property name="username" value="fuse" />-->
        <!--<property name="password" value="fuse" />-->
        <!--<property name="defaultAutoCommit" value="false" />-->
        <!--<property name="maxTotal" value="5" />-->
    <!--</bean>-->
    <bean id="reportdb" class="org.postgresql.ds.PGSimpleDataSource">
        <property name="applicationName" value="Fuse Test" />
        <property name="databaseName" value="reportdb" />
        <property name="user" value="fuse" />
        <property name="password" value="fuse" />
        <property name="url" value="jdbc:postgresql://localhost:5432/reportdb" />
    </bean>

    <!-- PostgreSQL DB - XA, non-enlisting datasource -->
    <bean id="reportdbxa" class="org.postgresql.xa.PGXADataSource">
        <property name="applicationName" value="Fuse Test" />
        <property name="databaseName" value="reportdb" />
        <property name="user" value="fuse" />
        <property name="password" value="fuse" />
        <property name="url" value="jdbc:postgresql://localhost:5432/reportdb" />
    </bean>

    <!--
        Publish the above data sources, so aries.jdbc can pick them up and turn into fully JTA aware datasources
    -->
    <osgi:service ref="reportdb" interface="javax.sql.DataSource">
        <osgi:service-properties>
            <!--
                This will allow to lookup this OSGi service using two JNDI names:
                 - "osgi:service/javax.sql.DataSource/(osgi.jndi.service.name=jdbc/reportdb)"
                 - "osgi:service/jdbc/reportdb"
                Using any.other.key makes the service available only using JNDI name:
                 - "osgi:service/javax.sql.DataSource/(any.other.key=jdbc/reportdb)"
            -->
            <entry key="osgi.jndi.service.name" value="jdbc/reportdb" />
            <!--
                see org.apache.aries.transaction.jdbc.internal.ManagedDataSourceFactory.register() for
                all possible configuration keys
            -->
            <!-- Irrelevant for non-XA datasources -->
            <!-- Required for XA recovery -->
            <!--<entry key="aries.xa.name" value="reportdb" />-->
            <!-- Required to be configured in addition to credentials at low-level datasource -->
            <entry key="aries.xa.username" value="fuse" />
            <entry key="aries.xa.password" value="fuse" />
            <entry key="aries.xa.connectionMadIdleMinutes" value="10" />
            <entry key="aries.xa.connectionMaxWaitMilliseconds" value="5000" />
            <entry key="aries.xa.partitionStrategy" value="none" />
            <entry key="aries.xa.pooling" value="true" />
            <entry key="aries.xa.poolMaxSize" value="10" />
            <entry key="aries.xa.poolMinSize" value="0" />
            <entry key="aries.xa.transaction" value="local" /><!-- default for javax.sql.DataSource -->
            <!--
                in addition to org.tranql.connector.jdbc.KnownSQLStateExceptionSorter.ALLOWED, we ignore:
                 - 0A000: java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
                 - 42P01: org.postgresql.util.PSQLException: ERROR: sequence "hibernate_sequence" does not exist
                to prevent errors during schema export: "org.hibernate.tool.hbm2ddl.SchemaExport: This connection has been closed."
            -->
            <entry key="aries.xa.exceptionSorter" value="custom(00000,01000,01003,01004,01005,01006,01007,02000,07000,07001,07002,07003,07004,07005,07006,07008,07009,08007,22000,22001,22002,22003,22005,22012,22019,22024,22025,22027,23000,24000,25000,2B000,2D000,26000,28000,33000,34000,35000,37000,3C000,40000,40003,42000,0A000,42P01)" />
        </osgi:service-properties>
    </osgi:service>

    <osgi:service ref="reportdbxa" interface="javax.sql.XADataSource">
        <osgi:service-properties>
            <!--
                This will allow to lookup this OSGi service using two JNDI names:
                 - "osgi:service/javax.sql.XADataSource/(osgi.jndi.service.name=jdbc/reportdbxa)"
                 - "osgi:service/jdbc/reportdbxa"
                Using any.other.key makes the service available only using JNDI name:
                 - "osgi:service/javax.sql.XADataSource/(any.other.key=jdbc/reportdbxa)"
            -->
            <entry key="osgi.jndi.service.name" value="jdbc/reportdbxa" />
            <!--
                see org.apache.aries.transaction.jdbc.internal.ManagedDataSourceFactory.register() for
                all possible configuration keys
            -->
            <!-- Required for XA recovery -->
            <entry key="aries.xa.name" value="reportdbxa" />
            <!-- Required to be configured in addition to credentials at low-level datasource -->
            <entry key="aries.xa.username" value="fuse" />
            <entry key="aries.xa.password" value="fuse" />
            <entry key="aries.xa.connectionMadIdleMinutes" value="10" />
            <entry key="aries.xa.connectionMaxWaitMilliseconds" value="5000" />
            <entry key="aries.xa.partitionStrategy" value="none" />
            <entry key="aries.xa.pooling" value="true" />
            <entry key="aries.xa.poolMaxSize" value="10" />
            <entry key="aries.xa.poolMinSize" value="0" />
            <entry key="aries.xa.transaction" value="xa" /><!-- default for javax.sql.XADataSource -->
            <!--
                in addition to org.tranql.connector.jdbc.KnownSQLStateExceptionSorter.ALLOWED, we ignore:
                 - 0A000: java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
                 - 42P01: org.postgresql.util.PSQLException: ERROR: sequence "hibernate_sequence" does not exist
                to prevent errors during schema export: "org.hibernate.tool.hbm2ddl.SchemaExport: This connection has been closed."
            -->
            <entry key="aries.xa.exceptionSorter" value="custom(00000,01000,01003,01004,01005,01006,01007,02000,07000,07001,07002,07003,07004,07005,07006,07008,07009,08007,22000,22001,22002,22003,22005,22012,22019,22024,22025,22027,23000,24000,25000,2B000,2D000,26000,28000,33000,34000,35000,37000,3C000,40000,40003,42000,0A000,42P01)" />
        </osgi:service-properties>
    </osgi:service>

</beans>
