<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2017 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
            http://www.osgi.org/xmlns/blueprint/v1.0.0 https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/spring/camel-blueprint.xsd">

    <bean id="jdbcReportIncident" class="com.fusesource.examples.persistence.part1.SqlSpringReportIncident">
        <property name="template" ref="template" />
    </bean>

    <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
        <property name="dataSource" ref="reportdb" />
    </bean>

    <camelContext id="camel" xmlns="http://camel.apache.org/schema/blueprint">

        <template id="template" />
        <endpoint id="sqlEndpoint" uri="sql:xxx" />

        <!--
            Route which will insert a record in the DB when a file will be poll from
            datainsertparams directory. This file contains the params to be replaced
            in the query with # symbol.
        -->
        <route id="insert-from-file-using-split">
            <from uri="file://target/datainsertparams?moveFailed=failed" />
            <convertBodyTo type="String" />
            <bean ref="jdbcReportIncident" method="convertStringIntoArray" />
            <to uri="sql:INSERT INTO REPORT.T_INCIDENT
                      (INCIDENT_REF,INCIDENT_DATE,GIVEN_NAME,FAMILY_NAME,SUMMARY,DETAILS,EMAIL,PHONE)
                      VALUES
                      (#,'2017-03-22','Charles','Moulliard','Incident Webinar',#,'cmoulliard@redhat.com','+111 10 20 300')" />
            <log message=">>> Result using params : ${body}" />
        </route>

        <!--
            Route which will insert a record in the DB when a file will be poll from
            datainsert directory. This file contains the reference of the incident
            to be created. The query is created within the method insertRecord and
            endpoint sql:xxx is overrided
        -->
        <route id="insert-from-file-using-bean">
            <from uri="file://target/datainsert?moveFailed=failed" />
            <convertBodyTo type="String" />
            <bean ref="jdbcReportIncident" method="insertRecord" />
            <log message=">>> Result : ${body}" />
        </route>

        <!--
            Route which will execute the select query every 20s and display result in the log
        -->
        <route id="trigger-database">
            <from uri="timer://webinar?delay=4000&amp;period=20000" />
            <to uri="sql:SELECT * FROM REPORT.T_INCIDENT" />
            <split>
                <simple>${body}</simple>
                <log message=">>> Select all : ${body}" />
            </split>
        </route>

    </camelContext>

    <!-- PostgreSQL DB -->
    <bean id="reportdb" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/reportdb" />
        <property name="username" value="fuse" />
        <property name="password" value="fuse" />
    </bean>

</blueprint>
