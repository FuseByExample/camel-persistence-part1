<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2017 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
            http://www.osgi.org/xmlns/blueprint/v1.0.0 https://osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
            http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/spring/camel-blueprint.xsd">

    <camelContext id="camel" xmlns="http://camel.apache.org/schema/blueprint">

        <!--
            Route which will execute the select query every 20s and display result in the log
        -->
        <route id="trigger-database">
            <from uri="timer://webinar?delay=4000&amp;period=20000" />
            <setBody>
                <constant>SELECT * FROM REPORT.T_INCIDENT</constant>
            </setBody>
            <to uri="jdbc:reportdb" />
            <split>
                <simple>${body}</simple>
                <log message="*** Select all : ${body}" />
            </split>
        </route>

        <!--
            Route which will execute the select query when a file will be poll from
            data directory. this file contains the keys of the incidents to be find
            and display result in the log
        -->
        <route id="key-from-file">
            <from uri="file://target/data" />
            <split>
                <tokenize token="," />
                <setBody>
                    <simple>SELECT * FROM REPORT.T_INCIDENT WHERE INCIDENT_REF = '${body}'</simple>
                </setBody>
                <log message=">>> SQL Query : ${body}" />
                <to uri="jdbc:reportdb" />
                <log message=">>> Select using key : ${body}" />
            </split>
        </route>

    </camelContext>

    <!-- PostgreSQL DB -->
    <bean id="reportdb" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/reportdb" />
        <property name="username" value="fuse" />
        <property name="password" value="fuse" />
    </bean>

</blueprint>
